image: python:3.9-slim

variables:
    DEBIAN_FRONTEND: noninteractive
    GIT_SUBMODULE_STRATEGY: recursive
    JUPYTER_PLATFORM_DIRS: 1

stages:
    - test
    - bench
    - post

before_script:
    - apt-get update && apt-get install -y build-essential
    - pip install poetry
    - poetry install -E jupyter

test:
    parallel:
      matrix:
          - PYTHON_VERSION:
              - "3.8"
              - "3.9"
    image: python:$PYTHON_VERSION-slim
    stage: test
    script:
        - poetry run pygount --format cloc-xml -o loc.xml josie
        - poetry run pytest
    artifacts:
        paths:
            - "*.xml"
        expire_in: 1 week

.benchmark:
    stage: bench
    dependencies:
        - test
    before_script:
        - apt-get update && apt-get -y install git
        - pip install pipenv
    script:
        - git fetch origin master
        - git checkout origin/master
        - pipenv install --system --dev
        - pytest --bench
        - git checkout $CI_COMMIT_REF_NAME
        - pipenv clean
        - pipenv install --system --dev
        - pytest --bench --benchmark-compare=0001 --benchmark-compare-fail=min:10%
    only:
        - merge_requests

# pages:
#     stage: post
#     script:
#         - |
#             apt-get update && apt-get -y install texlive texlive-science \
#             texlive-latex-extra
#         - poetry run invoke docs
#     artifacts:
#         paths:
#             - public
#     only:
#         - master

# badges:
#     image: python:slim
#     stage: post
#     dependencies:
#         - test
#     before_script:
#         - apt-get update && apt-get -y install git
#     script:
#         - git fetch --all --tags
#         - pip install badgey
#         - badgey LOCBadge loc.xml
#         - badgey CoverageBadge cov.xml
#         - badgey GitVersionBadge .
#         - badgey PythonBadge "3.8+"
#     artifacts:
#         paths:
#             - "*.svg"
#     only:
#         - master
